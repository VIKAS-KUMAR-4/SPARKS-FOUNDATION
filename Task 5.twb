<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.1i0wkey0dgi2m41b9sd071ihh2r6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.01quuqn0rcag5m103yyan05jc61i'>
            <connection class='textscan' directory='D:/' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.01quuqn0rcag5m103yyan05jc61i' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.01quuqn0rcag5m103yyan05jc61i' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Discount (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Discount]' peg='0' size='0.1165' />
      </column>
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='None' datatype='integer' name='[Profit (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Profit]' peg='0' size='285' />
      </column>
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Count' name='[cnt:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Max' name='[max:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='None' name='[none:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[__tableau_internal_object_id__].[cnt:SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[max:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[cnt:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Discount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Discount:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D'>
            <properties context=''>
              <relation connection='textscan.01quuqn0rcag5m103yyan05jc61i' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Gantt view of Sub-category vs Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Gantt view of Sub-category vs Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1i0wkey0dgi2m41b9sd071ihh2r6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0wkey0dgi2m41b9sd071ihh2r6'>
            <column aggregation='None' datatype='integer' name='[Profit (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='2' formula='[Profit]' peg='0' size='285' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit (bin)]' derivation='None' name='[none:Profit (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]</rows>
        <cols>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]</cols>
      </table>
      <simple-id uuid='{778970C4-0191-4D12-881B-F43CD16FFD4C}' />
    </worksheet>
    <worksheet name='Max to min profit statewise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Max to Min Profit state-wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1i0wkey0dgi2m41b9sd071ihh2r6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0wkey0dgi2m41b9sd071ihh2r6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]</rows>
        <cols>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{32F574C1-F79B-4195-978B-F67ED4E489E3}' />
    </worksheet>
    <worksheet name='Profit vs Discount'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Gantt view of Profit vs Discount</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1i0wkey0dgi2m41b9sd071ihh2r6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0wkey0dgi2m41b9sd071ihh2r6'>
            <column aggregation='None' datatype='integer' name='[Discount (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[Discount]' peg='0' size='0.1165' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[Profit (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='2' formula='[Profit]' peg='0' size='285' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Discount (bin)]' derivation='None' name='[none:Discount (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit (bin)]' derivation='None' name='[none:Profit (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Discount (bin):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]</rows>
        <cols>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Discount (bin):qk]</cols>
      </table>
      <simple-id uuid='{588252D5-90B9-44EB-8AD5-5730AA41ED67}' />
    </worksheet>
    <worksheet name='Region vs Discount, Quantity, Sales (Horizontal bars)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Region vs Discount, Quantity, Sales (Horizontal bars)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1i0wkey0dgi2m41b9sd071ihh2r6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0wkey0dgi2m41b9sd071ihh2r6'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Discount:qk]' value='112' />
            <format attr='width' field='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Quantity:qk]' value='112' />
            <format attr='width' field='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]' value='112' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Discount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Discount:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Discount:qk]' z-order='1' />
            <reference-line axis-column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Quantity:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Quantity:qk]' z-order='2' />
            <reference-line axis-column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Discount:qk] + ([federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Quantity:qk] + [federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]))</rows>
        <cols>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{93ACF5CB-198D-46EF-94B4-B476546F1171}' />
    </worksheet>
    <worksheet name='Region vs sales and profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Region vs Sales and Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1i0wkey0dgi2m41b9sd071ihh2r6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0wkey0dgi2m41b9sd071ihh2r6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[Multiple Values]</rows>
        <cols>([federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk] / [federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{2CA270AB-E73F-4C33-BCA6-5207634BBEB0}' />
    </worksheet>
    <worksheet name='Region wise Sub-categry and Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Region wise Sub-categry and Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1i0wkey0dgi2m41b9sd071ihh2r6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0wkey0dgi2m41b9sd071ihh2r6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <size column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' />
              <color column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]' />
              <lod column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F11B230F-5449-43F8-A927-5CF6970DA2B3}' />
    </worksheet>
    <worksheet name='Segment and Sub-category Map view of United States'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Segment and Sub-category Map view of United States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1i0wkey0dgi2m41b9sd071ihh2r6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1i0wkey0dgi2m41b9sd071ihh2r6'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Segment:nk]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' />
              <lod column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Country:nk]' />
              <lod column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]' />
              <geometry column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[Latitude (generated)]</rows>
        <cols>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FAF048C5-5583-4095-BB1A-18F5C643B984}' />
    </worksheet>
    <worksheet name='Sub-category Measures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Sub-category Measures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1i0wkey0dgi2m41b9sd071ihh2r6' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0wkey0dgi2m41b9sd071ihh2r6'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='SampleSuperstore.csv' datatype='integer' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <manual-sort column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Discount:qk]&quot;</bucket>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[__tableau_internal_object_id__].[cnt:SampleSuperstore.csv_771439E56EB04E67953ABB2D99BCF66D:qk]&quot;</bucket>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]' />
              <text column='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk] / [federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names])</rows>
        <cols>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{D0FB3115-A500-46BD-BB1D-9B781F934BC5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='76200' x='800' y='1000'>
              <zone h='41750' id='3' name='Max to min profit statewise' w='76200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='dashboard-object' _.fcp.SetMembershipControl.true...type-v2='dashboard-object' h='56250' id='9' w='3200' x='73800' y='42750'>
                <button action='' button-type='text'>
                  <button-visual-state>
                    <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                    <format attr='background-color' value='#333333' />
                  </button-visual-state>
                </button>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='56250' id='10' name='Region vs sales and profit' w='35937' x='800' y='42750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='56250' id='13' name='Region vs Discount, Quantity, Sales (Horizontal bars)' w='37063' x='36737' y='42750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='222' h='98000' id='6' is-fixed='true' param='vert' w='22200' x='77000' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='54' h='7750' id='8' is-fixed='true' name='Max to min profit statewise' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]' w='22200' x='77000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8250' id='11' name='Region vs sales and profit' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]' w='22200' x='77000' y='8750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='15' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='14' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='41750' id='3' is-fixed='true' name='Max to min profit statewise' w='76200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='54' h='7750' id='8' name='Max to min profit statewise' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]' w='22200' x='77000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56250' id='10' is-fixed='true' name='Region vs sales and profit' w='35937' x='800' y='42750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8250' id='11' name='Region vs sales and profit' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]' w='22200' x='77000' y='8750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56250' id='13' is-fixed='true' name='Region vs Discount, Quantity, Sales (Horizontal bars)' w='37063' x='36737' y='42750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='dashboard-object' _.fcp.SetMembershipControl.true...type-v2='dashboard-object' h='56250' id='9' w='3200' x='73800' y='42750'>
                  <button action='' button-type='text'>
                    <button-visual-state>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5FF4A239-DDA0-49B3-BCA8-8F11C039C05D}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sub-category Measures' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Profit vs Discount' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='15750' id='8' name='Sub-category Measures' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='12' name='Profit vs Discount' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]' w='16000' x='83200' y='16750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='14' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='13' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sub-category Measures' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='15750' id='8' name='Sub-category Measures' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Profit vs Discount' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='12' name='Profit vs Discount' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]' w='16000' x='83200' y='16750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8C21AAA0-E9F8-4E01-BB0D-7EDD1017BD83}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97334' id='7' param='horz' w='98400' x='800' y='1333'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97334' id='5' w='82400' x='800' y='1333'>
              <zone h='97334' id='3' name='Segment and Sub-category Map view of United States' w='65600' x='17600' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='97334' id='9' name='Region wise Sub-categry and Profit' w='16800' x='800' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='97334' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1333'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='72002' id='8' name='Segment and Sub-category Map view of United States' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]' w='16000' x='83200' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='17666' id='10' name='Region wise Sub-categry and Profit' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]' w='16000' x='83200' y='73335'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='7666' id='11' name='Region wise Sub-categry and Profit' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]' w='16000' x='83200' y='91001'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='13' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97334' id='12' param='vert' w='98400' x='800' y='1333'>
                <zone fixed-size='280' h='97334' id='9' is-fixed='true' name='Region wise Sub-categry and Profit' w='16800' x='800' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='17666' id='10' name='Region wise Sub-categry and Profit' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]' w='16000' x='83200' y='73335'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='7666' id='11' name='Region wise Sub-categry and Profit' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]' w='16000' x='83200' y='91001'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97334' id='3' is-fixed='true' name='Segment and Sub-category Map view of United States' w='65600' x='17600' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='72002' id='8' name='Segment and Sub-category Map view of United States' pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]' w='16000' x='83200' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{38C44572-D005-4A2A-8C4E-7A20CD8CF170}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sub-category Measures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E17CA193-8C77-4613-8B24-262BDED96597}' />
    </window>
    <window class='worksheet' name='Profit vs Discount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1478534D-B24F-447C-AE2E-012CE6BF5AD4}' />
    </window>
    <window class='worksheet' name='Max to min profit statewise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:City:nk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A211168-D634-4395-B43A-3BD6EB59C760}' />
    </window>
    <window class='worksheet' name='Region vs sales and profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DCE42F9-F6ED-45CA-9635-497C5E168FE9}' />
    </window>
    <window class='worksheet' name='Region vs Discount, Quantity, Sales (Horizontal bars)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit:qk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93366B65-2F43-4B64-8C63-5E0F58FE60FD}' />
    </window>
    <window class='worksheet' name='Gantt view of Sub-category vs Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Profit (bin):qk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AE626B4-0B53-4397-98AB-21D377DB1472}' />
    </window>
    <window class='worksheet' name='Region wise Sub-categry and Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:City:nk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8561B9D7-5B3B-4ADA-87E1-FE6DF6880DF8}' />
    </window>
    <window class='worksheet' name='Segment and Sub-category Map view of United States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[Multiple Values]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Country:nk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Ship Mode:nk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]</field>
            <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5F92872-DB33-4088-90F4-025D379203B0}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Max to min profit statewise' />
        <viewpoint name='Region vs Discount, Quantity, Sales (Horizontal bars)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region vs sales and profit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{A480B896-8320-4F11-992A-3A90A5BEA952}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Profit vs Discount'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sub-category Measures'>
          <highlight>
            <color-one-way>
              <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{0A97D558-0FF1-4180-9AE6-AA456FFBA918}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Region wise Sub-categry and Profit'>
          <highlight>
            <color-one-way>
              <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Segment and Sub-category Map view of United States'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i0wkey0dgi2m41b9sd071ihh2r6].[none:State:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{30DF99E1-FB3D-4C8E-9CBF-4712346117A8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      L2dP+5WGxR82FfE0QlsVnwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Gantt view of Sub-category vs Profit' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Max to min profit statewise' width='192'>
      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
      /n8YgcMAQW7UigAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit vs Discount' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Region vs Discount, Quantity, Sales (Horizontal bars)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXQc13ng+6uurt4bjaWx7wRBcBcXkRRFUpRFajW1OVbk2JKfM0riN54k
      58zMmXlzMsl7yUxyZiaznDfJG3uSGTvxJJYdjy1bu6yFWihuEgmuAEksBLFvjW70vtXy/oAI
      LtUkgAbQ2Op3Ds9hfbhd99by1b33u9/9PkHTNA0DgxWIIAiCaaEbYWCwkBgKYLCiMRTAYEVj
      KIDBisZQAIMVjaEABisa80I3wGC+CPP+P7xObzxNzYbdPHjvGkRhodu0+DB6gGVLiLa2CA89
      8Rhjza/yWVfozkVTET555yOCuWvcosHoAZYxJrMFt9uD024mkYhx5qMPOXahG5N3DV9/dAOv
      //QVutMFfPnAHjoHR9iaCvCT7/8tQwmNmq2PsKVgiHc+uYqaDlC85Smef2jdQl/SnGP0AMsY
      X1cz/+Xf/j+0KmvYWgqvv/UrkqpGb0c7l5s/RKl/iMeefIpQMs14MES8+zP6vA/wu995gbGz
      HzIUiJNXu51vfO1BfO29C30584LRAyxjvPXbOPjsJt7/8DyDkTTl5bU0PfgoRWYTjnQHJ89e
      pd8tkm+f+A6a80tRBy9xpTVE0laC3QKSJGEyqSzX6YNg+AItV2K0XRikdn0DscE2BuV8qmxh
      Tpy5glRYy671JRw9fJjLYQd799yPNeFn9drVDLaepLUvzqYdu/CofsaSTioKFbp6UzStqVjo
      i5pTBEEQDAVYociREQ4f/gTVXsjBgw9hXq6f+LtgKIDBikYQBEE3B/D5fCQSiYVoz4IQiURw
      uVwL3QyDBWLF9wB9fX1UVVUtdDMMFgBjP4DBiscwg2aJrKicbR+i5doomxtK2NxQimgyvidL
      DeOJZcnFrhH+/MdHeeWTS/z7Hx2lrde/0E0yyIJlqQDJ4BAfvvM6735ymkhaJRUZ4t3XfsGJ
      lh6UOZrytPf5SaYVABIpmY5+QwGWIstSAa60XmT1roe5p9LGlfZOmj9rYcvBQ5iHLjMUSc5J
      HZtXleCwSgA4bRKbVpXMyXkNcsuynAOUlJbQevooqijR1NREb6KEYoeEva6QzrBCuVNFUSa+
      3qqqkkqlZlxHXWke//alB7jSPcb6+mIqCh1ZncdgYVmWChAMRqhZswEhPIx/PICclgFIp0DK
      ExAEAVEUARAEAbM5u9uwqqKIVRVFc9Zug9yzLBVATsUJjo1giofQCqspFYY5ceYCoeFxdtZJ
      CMKEEsCEApgM682KZVkuhMmJML29AyiSi+qqCiQtRtfVXuzeSsoL3Qg3+b0YC2ErF8MXCEMB
      VjLGSrDBisdQAIMVjaEABisaQwEMVjSGAhisaAwFMFjRGApgsKIxFMBgRWMogMGKZln6AsV8
      1/jwaDNJ0cV9e/ZiGr7Ax+d7EZzFHHpkLw5JXOgmGiwSlqUCdF3rYdOex6guskM6ypExga98
      9dcYPneSvkiSNQWOhW6iwSJhRgqQTkSJp0XyXFZC/gC2wgIswuKLqJQM+2g/+j6nkdi4ZSOS
      3YFkEsj3mBmJaqgeFVmecJFWFIVkcm42yRgsPaatAOlEhCvNR2gZcbF3Ry0nfvkBO7/9TarN
      i2844cwvZfumbRTIAzT3jCIkE8RkheHROPlNJkwmExaLBQBRFLFarTOuQ9M04kmZYDRBvsuG
      zWKedLE2mH80TSORkhmPJPC4bNizvP/TVoDQaCcffXCEzrCVsYFiJG8jxYvUj766tpbjJ94j
      LFvYtGs3BfFu3nn1l1iK6jjomvnLnolAOMH3Xj3F1YEAjVWFfOeZHeQ55+bcBlMTiiX57i9O
      0dHvZ1VFAd955l4K3PYZn2dG7tCx8UG6+iMUFbkBM0WlRUhL/Ks3lTv00aNHuXjxok4+7I9y
      rnNo8njbmnK8Hv3cYuvWrezcuXNuGmswyXunrvL/vfLZ5PG3n9rOE/c1zugcGUMj3o2Yv4fX
      fvYBZTXlQCFPf/NJCpd53h23201JiX7De1wNopnDmOLDqPYSPAVFlHjdunJOpzMXzVxxmE23
      vneimN1oZEYKYLHmsfa+/Ty6bytgwmZa3i8/wObNm9m8ebNOHkuksLxzjs8+fofdX3qcbz22
      BatlWRrVFiW7N1bT1ufnXOcQm+pL2LepJqvzzGgIFBxq4cd/9zYJyQwU843f+w2Ks9S8xUK2
      O8I0TUNRNV5++WW+9rXnkczGJDiXXL//qbSCRRIRTcKM7/+Mh0BWp5dtu3YyETvahX0FP3BB
      EDCLApJZRDSZjJc/x1y//+ZZfoBn9GtBlHC63bidNs41n0Je2duJDZYBM+oBRNFCfmEhsibj
      TqUJqxr5i28ZwMBg2sxIAVLxAC1nmgnJKt5duylf4uP/pY6iqqTSCmbRhFk0hmHZMCMFsDkK
      EGU/ly8P0pDfwAowAi1aNE3jf3/YyrGLvdSUevjW41syrkMY3J0ZKYCv5wKDpib+9R+8yE//
      4n8ysH8TVSvUs1LTNMaCcQbGwgTCCYo8jnn5Avf09HDmzBmdPBBO8OaJNhRFo+8yxAcusrmh
      VFeupKSE3bt3z3m7FhpN0wiEE5MrwUV59vl1hQCw2V2M9x3jk08SdCVMPLyCu4BrQ0H+7O8+
      YfxqH5f/+gP++B89SKU3b87ricViDAwM6OSReAqSYUypKJrJTHhcYmBA0ZXLNu7pYqffF+ZP
      /vZj/KE4BW4bf/jNB6gry5/xeWZ0d9xla3n2SZGe/hC/9s3nKFjEChAe7uT9j8+z9+lnEIcu
      8tGpNiyFtRzctw2befZzlzPtg4yOxxA1jZFAhHMdw/OiAGvXrmXt2rU6eUpW+O+vnqL51OeU
      lZbwfz7/MHXlBXNe/2LlXMcwI4EoAKPjMc62D2WlADN6EwL9l7nUp3HfnnsZPH6UEUWdcYW5
      QJNjdFzzUZRvQ07HaekJ8+hTz7DWEWdgjvIDVHjdkzZoySxSUaR3g5hPLGaRbz+1necf2sAL
      j2ymNouHv5SpKHIhffEhk0QTFRncUKbDjHoATU3R3dXPQL2Ttu4BmrKqcv4Z6e7EVrEam3IG
      FBmzMw+nJFJWbKctoqLmzX4/wIbaQn7zsU28+/Y1Hnt8M42VngXZV+CymREFbcXlJlhTlc9L
      j9/Dha5RNtR5WV9TkNX9n5ECFFauZ0vtIB+8+yE1DxykZFGaQaM0H/+McUs+kaFuyoUS3GqC
      tKoRDMq46oQ52Q9gtcKhPesI95zl0V1rJvMN5Bqz2YzFYsnqGpYyVuDx3U08vnt2n+GZeYOG
      RlHy6mnyjnP47AX2b2vAuuimAU4ef+ElAC4d+4D8rRsRuj7jlZ/9DJOrlC9vXFkvisHdmZEC
      hEZ76GqL0DsWZzspehWV1abFawZdd/+BL/5zH8+vu29hG2OwKJnRGKawfBVKsI2me+5Hriqh
      fBFbgQwMpsO0e4BkNEQMBw8/9esogoBcW4TFUIAFJZ5MMxKI4nCn0DTNcIXIgmkrQHCkj66R
      MVpPNBMCoJiv/+7XKF7mO8LuRFpWON7Sx+m2Qapb+ti9oTrrXUnZEE+m+S8/PUHr+VYKi4b5
      jtvLutrinNW/XJi2AhSUVzE0PIyzrIzioip27dyOd5Fuis8F5zqH+cuff4YyHOC//uwkHpc9
      p7mCL/eM0dw2iJpMER0J8fHZbkMBsmCaCqBw/I2XaU2Wcu+6NUR9nfzV37zCv/i938C6zLvd
      WCyW0b7c2tFLKhFFVGVSiSitHb1UFUi6cjabDbt95tEKpsJpkzCLJlKAIGBEpMiSaSpAgIH+
      PL7yj5/GawbYQLTtf9GvqKxaxFaguaC1tZXLly/r5Kqicm9xBK24EkGIkhhq4c03L+nKbdy4
      kS1btsx5uxqrCnlm31re/NUAa1aV8/iu1XNex0pgmgqgMT54ke/9p3+P9MXxcEecNfPYsMVC
      Q0MDpaV6L8vBsTCW/sDk8ZrqIkoL9BEg3O75cZEIRhIcbu4imkjR0jVCS9coezdntzF8JTNN
      BSjiH/3xHyGrN2+BNM2JU9lSJZ6UbzlOJNM5rf/UlUF84zEAkmmFw2e6cqoAmqYx5I/gC8ap
      L8/HZbfkrG6YcAZ87dMrnG4bZMvqMp7Z25RVVI5p/sKExWYnt5e4uLl9M/Z8WYBGRkbo7OzU
      ya9eHUGI9EHCjyBGCQ5aOH5c/4Ty8/NZt27dnLfrbMcQ/+0XpwjHkqyqKOAPX9yHcx6UoLu7
      O6M7eM9wkP/9USuKqtLeakIZ76Y+gzdseXk5dXV1dzz/snQWV9Mx+vsGSAl2qqoqkLQ43dd6
      sRZUUF50a6b4bJFv84RV5tEzNlPkmvoyDw9vr0fV6gEoLXBmLDfbPOg/+MEPaGtr08kD4QTj
      oYkeqPOqwB+1vYMlQ5zY5557ju3bt2ddf3t7O0ePHtXJw7EUBMYxp6NoZgenTvhoz2AI2LVr
      18pTgMFrVxgMmSA+QEQBu78Tn+gh2H4C+5cepMCut9bMlNsXneZrEcrpdFJdXa2T+0NxfEmJ
      6+93YaGT6qoiXTmbzTar+vfv38+2bdt08s8vD/DOyQ4IdmEpaeTJL2/NGJuzpmZ2w7KDBw9y
      8OBBnXwkEOXP/v4I/ZdOUtG4jX/xzQcpz8IlfVkqQMXqLZSrMoPX2omSZkh1s2/HPfgvnWIg
      mibfZp78Mmqahqre+esdCgYZHhnRycOBKEODY5PHhZY0g2pMfwJNIy8v+40yqqpm/Iq7HRZs
      kpl4SsZkEih02+/YA9zt+qaivr4+o7y6fg2DSSdXTvk59PAD7N+z/q7XMNfYLCJej4NBQaAo
      z47dYs6qnmWpAKgpOi6cR/bUsLbCji8YBsBqFUiltImoYsrE9kFVvbE3IBOxWIxQMKiTj46F
      CIfDk8cjPhNm9BNhj8dz1/NPhaIoGV9sWVZQvnjgmqaRkjOXm+r6suXU5T7OdwyjJmXe/byT
      /fdUU5Q39+sdd+LYxR5OXR5AVFSa2wc5cr6bR3esmvF5lqUC9LS1Yq1axxqvC5QkpvFRfLE0
      3V1jlO8UMZkmcgTAxH6A63sDMiGK4mTZm8l32ekbDaOoGqJJoMBtz1jOPMX5pyKdTmc873g0
      SUq+rgDgC8YyDgGmur5sae3xk1ZURCAYTdIzGqHc65nzeu6ERbp1GCtJ5qyuc1kqQCrm59zH
      v+IUIqu27GbbjnV8+P4b5DfuoGyO8gO4HRbuWV1GKHojQUMuuf1jn+sgfetqvHx89hoANouZ
      hor52Y984sQJzp49q5PLisoGaxilxIIoDtD+2btca35fV27Tpk3s2bPnjudflgrQuP0AjbcZ
      Hh596tk5rUMQBJw2Cadt9hPquxEOh+m6elUnH/RH6OrzTx7nu2y4haiuXEFhIcXFc+8jNOSP
      TCpdWlbwBWPzEpdo7dq1VFZW6uS+YIxL3b7J46aaIkry9QuRLpfrrudflgqQC1RVY3Q8Npki
      yZvvwDQPliDtDmN4h8UEmoqsqAiA227OWE6Z5fj/6tWrRCIRnfz8+fMIsXEEOYocGuTYyVOk
      xit05aqrqykomPveIS3fGgImndaHhJkOhgJkSSCSoL1/DE2bCMthkUTyXbMzOc4Ep81CRZGL
      QX8El92S8es3FwSDQfx+v06+qdpFTaEEFCMIkG9VGB0d1ZWbj94HJiJB3HKcpVeCoQBZEkuk
      JocAqqYRS6RzqgDxpMygP0JaVhmPJBgLxSkvunt3nw1VVVV4vV6dPGYawhq7EYmioiI/Y1yk
      2ZiA70b0NleUaCI7V5SV68wzSzxOG9cHPAK5d0cOx5Okb7ICjUfiOa1fvG24l8lSNZ/Itw2B
      ZCU7K4DRA2RJMJrg+i3XgFA0mVOHMOGLf/Nt/AmFQoRDIZ18zD/GeHgiVYogCPhtKhY1oSvn
      dDpnlSctFosx5vPp5H7/OGO+G+2yaEnGbPqFMJMg3HUOYijAFIwHg/T19+vkzVcG6feFEBJ+
      NFshoYAHdXWZrlz+LCeAgUCACxcu6OTRRJqxQHRy8SsVtCKHhnTlauvq2LJ1a9b1h0OhjHOA
      Md8YweiNjUIFNhUL+uBcpWX6ezITYrFYxvr9/gB+/42FSJuQwm/Xfw4cUyifoQBTsHPnzoxp
      TtNvnuHa0SuIYy0ohevY9sBGvnFQn0xvtjSsXp3xJXr3804+O9yCEB0Es4P6ijpeeHGfrpwk
      zY+ZdqE3Aha67fSP3lCAbHIEg6EAWZPnvHW4k+eYnzmA1WrNGPXN6fahme0IogVNtCLZXRQV
      6Z3h5gvpJs9PQSCjJ+h8crs37u3H08VQgCypKMq7MQkWhHkLjnv27FleffVVndwfiiP5wqAk
      QTAxFGvjT/5E7za8evVqvvGNb2Rdf3dPDz09PTr5ld4xwrEkghwHsx05PExxBlNseUUF5eXl
      Wdc/MjJCS2urvl3DQUbHowhyAk20Ehp1UleuDxBsliTWrLnz3sUVoAAasbEePjpyGmf1Ju7f
      uhppBvGMwuEw8bjewqIkwwhyDEFNY5JjyIkwIxm8Rh0Ox5SrkXejoqKCRx55RCf3h+P8/bvn
      SSQnvEF3bKtn+xr9i5afP7uo0U8//XRG+T//b+/S2+9H9F1EydvIM1/awjN79WHcZ4uiKKTT
      ehNnNJYgEksgpMJokordImYsN5WH6PJXACXJ2fNd3PfYU/Se/JihSDXVedO317/66qu89957
      OrmsqJivrz6GevjL//hRxl1hhw4d4rnnnsu6+SUlJRkz1Wuahuip4ejFXmrLPDy3fz2eeViH
      ePvtt+nr69PJx9v7MEcSCAk/wmiaUx/1MXrpiK7c/v377/oFnorS0lI2btyok4vuUYbPdqPa
      ixGAxqYaNmYIS1M2xSR82SuAJqcQPF4KbWYs1R7awgqVrhvuBdf97UOhEGazGavVSjQaxeFw
      kE6nefLJJ3nhhRcIBoNIkoQkScRiMYaCaf7o+4dJplVcdgv/8vl7aawuxmQykUgkcLlcxGKx
      yTrC4TA2mw1N00gmk+Tl5REOhzGZTNjtdiKRCHa7HUVRSKVSeDwegsHgZPTnWCyGw+EglUoh
      yzIej4fda4vZv7kSURSJx+MoikQ8HkdVVdxuN6FQCKvViiAIJBIJ3G430eiEv5DD4SASieDx
      eEin07ecNxgMYrFYEEURVVXxeDwkEglUVcXlchEOh6mpLCPQOYzmqkQ0CZQXF2CxmCfPa7PZ
      UFWVRCKBpmmEw+HJSNzRaBS73Y4sy6TT6ck6b76/TqeTZDJJaWkpjY2NhEKhyTbF43H27LMx
      bvqYS30htq0p5+sPNVHgmehpk8kkbrebSCSCyWRCUZSM9xdmmCl+KaKlInzS3MYD921jrOUU
      o2XrWVt4w2LQ39+f0dnqZgRByOhrP+ALc6V3jPV1xRkjQsyGO9U53b9nW890zzs6HuNv3j5L
      30iI3Rur+NpDG7O2DGV7LZqmoWoTtv6Z1i0IAoIgCMteAdAUus4coyMsEI+mePDAA+RZb3R8
      fX19VFVVLWADlyaappGWVdKKgs1iRlyCUQIFQRCW/RAIQaR2806co2NIrkLcOfbbX64IgoBF
      ErEs8SyhK+JtMJmtlJTrXXUNDHQK4PP5SCT0Ph3LlXA4nNHKYbAyWP5zgCkw5gArF0EQhKU3
      czEwmEMMBTBYkmiahj8U59TlAXzBWNYm4RUxCTZYfgz4wvybH37CWChGgdvOH764L6tk4cYc
      wJgDLGreeOMNPvjgA508kZIZHb8Ric/rsWO36l2/H3jgAZ59NnNEkJWxDmCwpNm5cycNDQ06
      efdwkO+/eQY10IXJU82hJ7ZnjE1UWFh41/MbCmCwqLmTM2Bjo4LJWczbb7zGwUcO8PCupqz2
      JBgKYLAkMZtFHtnRQLinhoe21We9IcewAhmsaAwFMFjRLMkhUGJ8iPPnmwnam3h4RwPRwBVe
      feU01nwrG+5/jDKtjyPHLyBbPOx5aD/C4AU+OtOFmFfB4w/dh10y9N5ggiWpAJIjn42bN3Kx
      d8IJXA2HWffws2ytmfDzb/l8iHsPPoV5/CoD3dcI+tM89ZWvMHTmBP2RJKsLchfH3mBxsyQV
      QLTYcKgW+CIhRTqZpqX5LXrOudn+wAMIJgmH3YKUykcO9CE5XFhFE0WFFtqiKqrnxo4wRVEy
      JsI2WBpcf37ZRqZbkgpwKxrOynt4ftUu0oEWjrcMUiqlicWTmGPjmC0eYv4xEoqKz58kb/VE
      cozryRSub9NbiqRlhXAshc1ixm41z1uessXM9eeX7TNckgow3n+ZI8dPMRBUCQTvYUO5wJkL
      HaRUkXv2PYw3neLIB6+j2ArZu38fFZYwb/ziFcz51Tya4xie84WiqPzwnXOcujJARZGbl768
      lcri+QlEu5wxXCEWuStER0cHx44d08lD0SQfn+tG+SJ5+fpaL2uq9YGxKisrOXDgwLy3c6H4
      +c9/zhNPPIHdPvN5neEKsQQwmUyYzfrHJIoyCCaEdBBMEoJJzFgu11GblxqGAixyVq1axapV
      +uyHiqpie+ccR48dp7qynN/59YNZ5cld6RgKsEQRTSZefPQeahxhKsrLKCuc++QYKwGjf1zC
      mEUTDquExSyuSAvQXGAoQJZomkYiJeMLxkim5TkJUmWQe4whUJaEokn++vVm2vrGWFfj5Xee
      2p7TDDEGc8OMFEBVZRRFwGw2rZgu9+TJk1y+fFkn7/eFOXV5AIBP20AebKa0QD8O37RpE9u2
      bZv3dq40rve4mqZN/svmnZyRAkR8Hbzy4/eRC4rZ9/CjrCnzLHtFuB4w93YkKQEmEVN8FNVe
      jCRZMpYTxaUdOW2xkpIVfvJBCx+f7CBovcg3HtmKLcOWyKmYkQK4i5v4jZe8nDj8Fv/zP/05
      NZt38c2vfRmPdfmOpLZv38727dt18nAsifTmGZqPvseOfY/w0qFtOLJ4AAbZ8VlrP7/45BKm
      cILXj7VRV1nMgW31Mz7PjCbBweEW/uavf0SsYDP/1//9r3mgykkwmV1+1qWOy27hO8/s4KGt
      dfz2oW3YjZijOSWekm9k6dQ04lm+hzN6ajZ3BV/55kuUFDmJjAdZ++CXsKzQlcbrwWGtFjPS
      CpoTLRbubapgXa2XznGB1dVedq27e4j7OzHtt1dOxuhqOc0nxy8wPDLI+//wGiMaxoM3WBAE
      YWIxEAFEk5D1ezjtHmB8+Aq/eut9roatDFz1Yi5q5NEV+vVfLCiKSjKtICtq1laQpcpnlwa4
      2DWCqGi0do9yoqWPQ/fPPBXTtBXA6ijjsed+nf6BBGUV+YANFuh+a0qKnrYL+M2VbG0sQ0lF
      OPXpxwQs1RzYvQkhNc7JT4+Tyqvj/h3rEGLDfHT4OHkN29mxvhpxGbwoqqrx8gcX+eTIBWqr
      xvid4nJKMphhlzqKoqAoik7ePzIOqgKaCppK3+g4qZQ+Ubcoine1xE1bAZR0ClUQiYxc4+wI
      QAEVa+uxi7l/meLjPhSrlVQ0DWgMtpzG0riPreOnOdUdpsB/jpIN92Mea+VK5yCx3ktsOXiI
      nuMfMlRTQqV77pPJ5ZrW7lFePXIZJRhlNDpA+fF2Xnoi+4zwi5XTp09z7tw5nTwYSbDZlQRX
      HjBK+GqIH/5QX27jxo3s3r37jueftgLkl9cip0MEmu7n6e01fPbar4hrGvpYXPOPo6iCVU4T
      vvY0IDMed9BQlYe7son2Y6MoNgtlXg+SVE9gYAA1v4Rih4S9rpDOsEK5U538qqiqmvHLMV2u
      p/HM9JWaT0KROOpN7hfhaGJW17FYaWhooLS0VCcPx5JcvOZDVTVMJoH1tUV4nPoPm9PpvOt9
      mbYCjPWc5Uc/+DGdYSvNx70Eog5+79BiGEoImLQ0aRVIp9AsFjRUVEVDUWVMJgtyYmL/bzoF
      Ut7EhOl6tygIQkY/+uliMpmm7GbnA72f/+yuY7FiMmW2sLmdNtbWeBnyhyktcOFx2TOOyO+0
      n+I6075jeaWNfPkrz9A9bmPDmnIsjjzyZ5Bwei5JhHz0XOtkoE+h02OhuNxG8/FTuBLDFN9z
      AKdvkJazzQjJIOVr78Xec5YTZy4QGh5nZ510PUMgMKEAs9k0cv33ud54Ulmch8UskmTCIlJX
      lr8sN7/c/KxuJpmS6R0JEk+mSadVnDYL9gwLslM932krgGR1Ur/2Hmhvp7+/Hwhg27oWx0JN
      hKUC1tSBpkFB7SbWC9dISLXUe61QsBm6e1Hs9dSUeqDoXrqu9lC7Yxf5tuWxWisslAVikRAI
      xwnHJoY24XgKfzhGpXXme6Jn1Gf6ey/w1nvnaFpXC7iZWIvL/YOw5XlpyvPeIqusb7xxYLZR
      3XDTseSkoWldjlo3tyQSCSKRiE5+qXOIdCICSgoEkbarvfjWeXXlJEmaTAo9l6RlhXMdw/T7
      QmxZXUZNaW79wqTbYoFKWQ5BZ6QAdkcBNes3sHfPFkDAvgzMiYudgYEBTp48qZOn0grbSmJo
      xRNJIVzJXt57z6crV15ezoMPPph1/alUClVVdfIj53r4q9dPk5YVvB4Hf/rbD1Hg0k9CJUma
      l/lRodtObakHfzhOgdtOkSe7YGczUgCHt4oqqY1XX30VKODx5x+lYAHMoCuJ0tJS9u7dq5MH
      IwksXSNcNwRVet2syhAf32abncn35MmTDA0N6eQtXaOovmGk2AjhUBlvvB4lP4MC7Nixg7q6
      ulm1IRMmk0BNqWdiiDsLZqQAvu5zHDvXhtuzAZctzPIYTWfH9RxVQ/4I45EEhXmOnA4B8pxW
      qorz8AVjOKwSFd752RC/b9++jPIH/BF+8PZZ2k5/yIHHnubrBzdhWiCjyGyYkQKYRBtFJeUE
      RzrwX0sxrmq4Vqi7e89IkH/3958y1tFL+/c/5I/+j/05jcogCAKVXjd5Dis2ixlbjr1RSwqc
      /LNfv4+X01f5jQMbc/7yq6rGkD8yMQRy2SgvcmfVhhndtYKq9Xz5iXrGBzoYkgspMy8/s9t0
      +fzSAINjEURVo380xOkrgxy6P3cKICsqV3rGCMdTSGYTjZWFeDIMQeYLQRCwSg1gX4EAABGM
      SURBVBOesKKY+/cgEElwdTCApsF4OIHVYsbrccz4PDNSgGigi1/+5F1CmkogaKVhw7cpXuZz
      AJ/PRzAY1Mk7OjsREgEEOYGQHKeto4POUn13mJ+fT1GRPmLbbAnHkoxHE2jahDKMjMdyqgAL
      TTIlT85/NCaS5mXDjBQgr2Qt3/r9tWhqijd+9HNMKyAQwtDQEF1dXTp5oRhhT4MNWA+AWwvS
      2tqqK7d69ep5UQDxtsUd8zL/EN1OgduOwxohkZaxSiKF7hxYgUIjl3nlix6gf1DlvqyqXFpU
      VlZmtKPnD47TOxqaPK4t81BToi/nds/PsEi9LQyLqub2a6RpGoqqoX7xL9dzALvVzKaGEqLx
      FE6bBYuUg3WA6z3AdTRVXaClsIWnMM9O32ho8vqz/QJly+33PNd7AfyhOD985xwt57qx11zi
      q/vX5bwNFrOIZZb3fdoKMNx2nB/99B2Go0ksVhdb7t1CMpnHV3/tAVZiNJxoIn1jTyoQS6Rz
      Ghfouhl0LBjDYbPMmxn0Trx2tI2Pz3UjhhP89MMWNtYXs662OKdtmAumqQARjn3UwuO/9c+p
      L7CipqL89L9+jy3/+J+t2LUA3RAkx5HhBEGgttRDVXHehHdrjocgKfnGpFPTNNKyfrV4KTBt
      +5Ump4glZSwWCyY1SUzKp8JjWZHDHwBvnp0Clw2L2USh205hXu7zjgmCgFk05fzlB2isKpoc
      8tgs0qxXZBeKafYALnYf2MbPX/k+H6kmFFWlae8hvAtg/81EPHSNd147iWo3s+H+x6ix+jl6
      rBnZUcqePTvA38lHxy9iL1/D/p3rscxBu60WM2trvaTSChZJxLxI7kWuOHVlYDI6WyyRoqVr
      hD2banLaBkVRSckKkjn7+z/tOUB50338k8YdpNMyJrO0qB64HPJTe/+X2bZqYk9s6+enWHPf
      Qcz+Nrq6eokMD7P/0FP0f/4pA5EkdVk6Tt2MpmlE4ilC0SQel408hyXnk8BIPEUgHMdhlShw
      2+fFEvPuu+8yMDCgk/e1D+KJJDCZomjhS3z0qxHaT+vnIXv37mX16tVz3q60rNDe5yccT+Gy
      W2isLMzKEjQjK5BgErFYF5/vQyIYoPnsrxjoKGff/l1gksjPcyJp5Qz192FyF+CxmBHLXbSF
      VWrc088SKctyxu2OoViK1u6JLXniaIgNdcW47PoZkSzLs8pCmUqlMtafSiu0dI2SkhUEARoq
      CijJ16+Ezrb+TZs2sWaNPtqCt3aUUOzGVsNV5fmUFTp15fLz82d9/em0PuhVvy/MSGDCTTye
      SOGwmKjKkCMtnU7ftf5lsYeueMMBXlqvERu7yIlTPZRY5IlJmZLALNoJxxMTlpqYhiNfmFGW
      SLPZnNGdNxxLTdreFXWiN8i0Enun2KLTRZbljPVHI0nS8oRiaBqEYsmMvkizrd9sNk9+LG7G
      YbNMKoAggMOW2e1ZkqRZ1R8Khejp7tbJ2/vGGPJHJ48jfgdyRL8foqq6mpKSkjuefxkogEJv
      6xku9fmR4xEqtz9MWTrEiQ/eQhXMbN/7IEU9p3j1zXdQsPLYmrnJEpnvstE3GkJRNUSTMG9u
      CMlkkoDfr5MnEmnGxwOTSphnUQn49cNSt9tNcfHcmydrSvKQFZVYMo3XY8/oCj2fFOU5blEA
      b97M/YBgWSiASGXTFgqr46gmM06HDUHbyEMlDWgmCYfNChvvI78+jmixY8tyxfB23A4Lm1aV
      TM4BnPO01TKZSODz6Te6jIVijI76Jv1hRCWOw6SPfpBpM8tcYLWYaaouQtW0WUVmy5YCt42N
      9cUEwnHyXXYKsgx1swwUAEyiGefNLgeCiMN5U5AowYxrjl0SBEHA7bDidixM3mGHVcJsMpFW
      VASBBUnOkVYU0rKK3WJGzLEvkiAIFLjtFORqJXilMh4IMJhhR9R0qaysJD8/fw5bNIHdKtFU
      48UfmlgJzjQBnk9C0SQd/X5SsoLHaWNNdaHOQW++yakZdKWSTqdJxOMZ/6aoKoqiYRZNdzRB
      yhksGHOFWTQhmcUFiU49HIgSTUxc21goRijqnPXXeCbcYga1WWisyoEZ1OAGaVmhcyBAOJbE
      47SxqqIgp2sjiZRM67UbZtDVlYU5TZW60K4gY6E4Y6GJD5M/HccXjGXlD7V4VrOWGMOBKKPj
      MRIp5Yv/R6f+0RwSjCZI3WQGvf4y5IzbX/gc7w1RlFsrVLKc7Bs9QJbcvgMp2x1JUzHm93P2
      7FmdPBhN4r/ppQ+PiKTH+3Xl6urq2LI1+6C54XCYcDisk6upGAG/Hw2QRBPpEjt+JaEr53Q6
      cTr1C2TTZXBwcFrXr4RsjA3oLUGCyZRxIe86hgJkiSTeviNrfjrTpqYmamtrdfJTlwf4y1c+
      Qwv3o5kd3L9lE7/99L26crONyRMKBvFnWIfo7vfjG5tYiTUJ0Osk41rA3RahpsPOnTvZsmWL
      Tv73757n7GcdiOMdKHl1NK5r5Dcf1yu6JN3dPG0owBSM+f10Xbumkw/6woQiN754fXIIORbQ
      lcvLm3m4vpuRJCnjQywvKcIkWVFMZjBJlBUXztvus0yEb3KDUDWIxlPzshhmtVozriSXFReC
      aAVBBNFCWXFRVtdvKMAUNDQ0UFhYqJN/cLqLU593Ioa6UPLqWLe5ib2b9d6QmX47Fwz5I7eM
      g/tv2p6ZC9wOC+H4hBKYBAFnjtch9myq5tWjVwj5J3qevZuqszqPoQBTUFJSkrEb12xFvN8a
      RIsNYXJ6ObD3XurLc5ctwW41Iwg35p6OHAf9LcyzMxSIoqoaVotIniO3CnCzGTaWSDPkj1Lh
      nefguAY36BjwT/gBMbEg0zkQyKkCrK8rprY0n55wH06ndd588ds7OriWYQg4EogyHkmAKiOI
      EvGx3oxKWFJaSnl5+Zy369pQkFRaQWQiafa1oXG2rZl5PYYCZImkC0uSW4uyy25hc0Mpwz2X
      qSn1UDtPO7Kee+65jPI/+B+HGekaQfRdRC3eyLOP3Mvju+be71/TtMmNNzdTku/4whSrgTZx
      nMnv6U75Ba5jKECW6B7JPC0EdXd309zcrJMHwgnePtmBGg9waXyQ7yV9bFqlH6qVlpZy//33
      z3m77JYb1iUBAatlfvaJvPzyy18EY9ZzfWps9l/iL/70df4iQ5knnniCb33rW3c8/wpQAJWR
      9mY+PnsN0V3O4wd2Y5em/7W+cuUKvb29OvlnF3sxBYcQkuOYQtc4fjSNPNapK1dXVzerHVGJ
      RIKRkRGdPBxLQToCJjNoKtFQgAzFZuWLf3dy43rx3HPP8fTTT+vkXYPj/NnfHSGeTGOzmvlX
      X99LY5Xe4DCVGVTQMvUvy4l0lE9OXmDX7p0MnT1BetVWVhfc8Fnp6+ujqqrqjj8/fPhwxi/w
      WChOW+/Y5PG6Wm9GM+CuXbvuGGF5NqRlhb967TRnO4YoLXTx24e2UVc290533/3ud7l06ZJO
      HggnSKbliQQdogWPy4Y9Q4DeF154gV27ds15u1RV41L3KBe7RlhfV8z6uuIZO+MJgiAsewXQ
      kiFOtPSwe9tGIldP0WZZx9bKG+PFgYEBqqqqSKVSkwnz0uk0ZrMZVVVRVRWr1UoymZzMBSbL
      MoFIiv/8D0cZGIuyqqKQ7zy9leJ8F4IgIMsykiQhyzKapmGxWEilUpOLUoqiTMpmUuftfw9H
      YgRjE3ti7RYxqzqtViuKotyx3u7ubtLptO68zR0j/PLIZVQN3HYL335yCwVuO5IkkUqlMJvN
      aJqG1+vF6/XO+FozXctUf5/p/RUEQVj2QyDBZEaOhUnIKr6xJHmNt34lruu/qqqYTCY0TZtU
      jpv/r6rq5GRKVVWK8x38q6/vwR9OUu7NQ0S55VzXf3+zTBRF3fmvo6qq7ve313l7m8yiQEm+
      A5PJNLlv9vY6r2dZvFOdN9+H2+vVNI3y8nKsVivpdBpN07BarSQSCWpXNeIqLKNvJMzOdRVs
      aShGEAQkSSKZTCJJEpqmTW6nzFTv3e5vpnuR6fncfq23n/9u9xdWwhAIFV/nOT4604lUUM2j
      D+zAdtMcYKohkMHyZUUMgabCUICViyAIguEObbCi0c0BfD4fiYTerXW5Eg6H6evrW+hmGCwQ
      xhDIGAKtWIwhkMGKZ9mbQZczKVkhFE1it5hx2KScb4xfSBRV5XzHMBeujrC+vpgtq8uy8sda
      kgogJyN0XDxDonA9W+qLkOPjnDhyhKBUzkP7tkF4kKPHTyN6G9lz72p6uwZpaKjB332JsLue
      2sKln0xOVlT+5q2zNLcNUlbo4rcObaU6Q4qmpU4sFiOeISrHtaFx/vzHx0ikZN6UzPzT5++j
      sVLvCmGz2e66JXNJKkAiEiIvP5+QrAAaA5fOkrfxS6wLNnPmWhjnyCWadh0g0Xuazv4SwmPj
      rKrJ49zVELv3La18Nu3t7Xz66ac6eSia5NMLPSiqxijwvf7TGX1hKisreeSRR3LQ0vnhtdde
      4/XXX9fJJ/KTqVg0DVUQ+H//3dsZ8yQ89thjvPjii3c8/5JUAFdRBS4xRd8ogEwo4aK+woW7
      vBH1yAia5KKo0EkqXUNvMIDsv8ZPf9bGvqeexWY2oarqZMTlqaJDLzSKomA26x+TaFbAJCGk
      QiBKmERzxnKCICzq65uKZ599lmeffVYnf+tkJ3/7znlE/2WU/Aa+8cgWnt6TefP7Mo8OLSBq
      SRIyuFJxVIcDUgPIsoaiphBFG+aCah6sT9LZNULZhvJJ/xDglkjRi5Gmpiaampp08mAkwfHR
      t4mNXkWwuDjw+KM8uKUu9w1cINyOW4exLoctq+e4JBUgNNpDR2srV0NWHOJ6qqpdHPvwE6zp
      IHX3PYo40MOpY5+iphKs37mHiH+c0jU7GP38GN2jbupKXJPOvFNtmFistPcHJkOxqKpGS9co
      X9pav8Ctyh0711eyp72aCyc7Wb++ivs3Vmf1HJekAljsborrN+IFJKcTT8EGdlqGSZudlBZI
      kLcV+4gPkyMfr8eGZ0MjCCLr7tlGVF28X/uZUF7owmGViDDhFDdfO8IWK267hd//tV38VOnh
      qSfvxePMbt/DklQAm6uAatet+2+9ZZU3Dsw2SituLG45nRP+/6LVyeyClCweKovd/P5Xd/LW
      uzHWrKrmwPZVC92knCIIAjaLGafdgtVizroXX5IKYDDxAuxYW4kcWEVJSUnOo0IsF4yVYIMV
      jaEAWaJpGiOBKMcu9uILxjJGLjBY/BhDoCy5OhDgT/72Y8KxFHlOK3/6W19aliuxi5VUWuGV
      I5c4/FknceclvvrQZmwZ9iRPhdEDZMnZjmGC0SSqpjEeSXC+M0NIBoN549SVAf7hgxZ8wRg/
      /7iVk63ZubQbCpAlNaUeJPPE7bOYRapLl4t9aWkQiiUnk3KomnZLzuKZYAyBsmTL6lJ+99md
      XOwa4Z7VpayvnftUpAZ3ZvuactbWeOkOi1RXF7FjbUVW5zEUIEsks8iDW+t4cGvdQjdlReL1
      OPjDb+7j5Z8M8pVn9uAtyC4JhzEEMliSXE9T6/U4cNktWS+EGQpgsKIxFMBgRWPMAbIkmZZ5
      60QH5zuH2dZYxmO7ViOZ5ydC8p2IJlIMjkWwOT1omrYkvVoXGkMBpqCvry9jdOarAwF+crgF
      RVG5cN6EGh6kukRvCi0rK6OiIjsLxd2IJdL8+cvHaGttJb9giH/i8rIxQ3j05YqsqHxyrptj
      F3txVXbz0L2NWX2ADAWYgjNnznD8+HGdPBxLwVgYsxxHM9s5/G4PTpve1Xr//v3zogCXe3xc
      7BpBTaUZHItw5HzPilKAC1dH+O4vP0cdGed/vNFMgcfNznWVU//wNgwFmIInn3ySJ598Uifv
      HQnyH14+ykjbScqbdvEHLz5AaQ4ztec5rUhmE0kmktQV5i39jf4zYcAXIi2riEyEiu/36XMZ
      TwdjEpwlVcV5/JuXvsSejdX88W8+SEmWduhsqS/Pp8I7kRbUYZfYsrosp/UvNPc0lOH1ODCZ
      BLweB1uzvP7/H/6sg/fLJpU8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Region vs sales and profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Region wise Sub-categry and Profit' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Segment and Sub-category Map view of United States' width='192'>
      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
      uuwM9/8DwUG7sIigVzsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sub-category Measures' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
